{"version":3,"file":"index.js","sources":["../src/js/pixabay-api.js","../src/js/gemini-api.js","../src/img/bi_x-octagon.svg","../src/js/render-functions.js","../src/main.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = '48865554-9c41d4f1cdb1a3126cd29aed3';\nconst api_URL = 'https://pixabay.com/api/';\n\nexport const searchImage = params => {\n  return axios.get(`${api_URL}?key=${API_KEY}&${params}`);\n};\n","import axios from 'axios';\n\nconst API_KEY = 'AIzaSyDkma_-23SOOFT86C4sfDZ_GCLFzM_NQao';\nconst api_URL =\n  'https://generativelanguage.googleapis.com/v1beta/models/gemini-1.5-flash:generateContent';\n\nexport const pixabayPrompt = search => {\n  return `\n    <instruction>\nTask: Analyze the prompt within the \"prompt\" tag and generate a URL to invoke the Pixabay API.\nContext:\nIf keywords are present in the prompt, attempt to utilize them as search query parameters.\nConsider the remaining portion of the prompt as the image search query text (\"q\" parameter).\nThe \"q\" parameter is mandatory, so even if the entire prompt resembles other parameters, identify a section to employ as the query text.\nThe input prompt can be in any language (detect the language), consistently translating it into English initially.\nThe \"q\" parameter must be URL encoded, while other parameters are optional and, if discovered, should be separated using the \"&\" symbol.\nProvide the result in a format that can be directly appended to a URL string (excluding the URL itself).\nDisregard additional words such as \"please\", \"could you\", \"would you\", etc.\n</instruction>\n<examples>\nmountaing lake as vertical - should be converted to q=mountain+lake&orientation=vertical\nvertical illustration of cat - should be converted to q=cat&orientation=vertical&image_type=illustration\n</examples>\n<apidoc>\nAvailable options:\n\nq: (str) A URL encoded search term. If omitted, all images are returned. This value may not exceed 100 characters. Example: \"yellow+flower\"\n\nid: (str) Retrieve individual images by ID.\n\nimage_type: (str) Filter results by image type. Accepted values: \"all\", \"photo\", \"illustration\", \"vector\"\n\norientation: (str) Whether an image is wider than it is tall, or taller than it is wide. Accepted values: \"all\", \"horizontal\", \"vertical\"\n\ncategory: (str) Filter results by category. Accepted values: backgrounds, fashion, nature, science, education, feelings, health, people, religion, places, animals, industry, computer, food, sports, transportation, travel, buildings, business, music\n\nmin_width: (int) Minimum image width.\n\nmin_height: (int) Minimum image height.\n\ncolors: (str) Filter images by color properties. A comma separated list of values may be used to select multiple properties. Accepted values: \"grayscale\", \"transparent\", \"red\", \"orange\", \"yellow\", \"green\", \"turquoise\", \"blue\", \"lilac\", \"pink\", \"white\", \"gray\", \"black\", \"brown\"\n\neditors_choice: (bool) Select images that have received an Editor's Choice award. Accepted values: \"true\", \"false\"\n\nsafesearch: (bool) A flag indicating that only images suitable for all ages should be returned. Accepted values: \"true\", \"false\"\n\norder: (str) How the results should be ordered. Accepted values: \"popular\", \"latest\"\n</apidoc>\n<prompt>${search}</prompt>\n    `;\n};\nexport const askAI = prompt => {\n  let data = {\n    contents: [\n      {\n        parts: [\n          {\n            text: prompt,\n          },\n        ],\n      },\n    ],\n  };\n  return axios.post(`${api_URL}?key=${API_KEY}`, data);\n};\n","export default \"data:image/svg+xml,%3csvg%20width='24'%20height='24'%20viewBox='0%200%2024%2024'%20fill='none'%20xmlns='http://www.w3.org/2000/svg'%3e%3cg%20clip-path='url(%23clip0_102001_44)'%3e%3cpath%20d='M6.81%200.219C6.95056%200.0787966%207.14097%204.21785e-05%207.3395%200L16.6605%200C16.859%204.21785e-05%2017.0494%200.0787966%2017.19%200.219L23.781%206.81C23.9212%206.95056%2024%207.14097%2024%207.3395V16.6605C24%2016.859%2023.9212%2017.0494%2023.781%2017.19L17.19%2023.781C17.0494%2023.9212%2016.859%2024%2016.6605%2024H7.3395C7.14097%2024%206.95056%2023.9212%206.81%2023.781L0.219%2017.19C0.0787966%2017.0494%204.21785e-05%2016.859%200%2016.6605L0%207.3395C4.21785e-05%207.14097%200.0787966%206.95056%200.219%206.81L6.81%200.219ZM7.65%201.5L1.5%207.65V16.35L7.65%2022.5H16.35L22.5%2016.35V7.65L16.35%201.5H7.65Z'%20fill='%23FAFAFB'/%3e%3cpath%20d='M6.969%206.969C7.03867%206.89915%207.12143%206.84374%207.21255%206.80593C7.30366%206.76812%207.40135%206.74866%207.5%206.74866C7.59865%206.74866%207.69633%206.76812%207.78745%206.80593C7.87857%206.84374%207.96133%206.89915%208.031%206.969L12%2010.9395L15.969%206.969C16.0387%206.89927%2016.1215%206.84395%2016.2126%206.80621C16.3037%206.76847%2016.4014%206.74905%2016.5%206.74905C16.5986%206.74905%2016.6963%206.76847%2016.7874%206.80621C16.8785%206.84395%2016.9613%206.89927%2017.031%206.969C17.1007%207.03873%2017.156%207.12151%2017.1938%207.21262C17.2315%207.30373%2017.2509%207.40138%2017.2509%207.5C17.2509%207.59861%2017.2315%207.69626%2017.1938%207.78737C17.156%207.87848%2017.1007%207.96127%2017.031%208.031L13.0605%2012L17.031%2015.969C17.1007%2016.0387%2017.156%2016.1215%2017.1938%2016.2126C17.2315%2016.3037%2017.2509%2016.4014%2017.2509%2016.5C17.2509%2016.5986%2017.2315%2016.6963%2017.1938%2016.7874C17.156%2016.8785%2017.1007%2016.9613%2017.031%2017.031C16.9613%2017.1007%2016.8785%2017.156%2016.7874%2017.1938C16.6963%2017.2315%2016.5986%2017.2509%2016.5%2017.2509C16.4014%2017.2509%2016.3037%2017.2315%2016.2126%2017.1938C16.1215%2017.156%2016.0387%2017.1007%2015.969%2017.031L12%2013.0605L8.031%2017.031C7.96127%2017.1007%207.87848%2017.156%207.78737%2017.1938C7.69626%2017.2315%207.59861%2017.2509%207.5%2017.2509C7.40138%2017.2509%207.30373%2017.2315%207.21262%2017.1938C7.12151%2017.156%207.03873%2017.1007%206.969%2017.031C6.89927%2016.9613%206.84395%2016.8785%206.80621%2016.7874C6.76847%2016.6963%206.74905%2016.5986%206.74905%2016.5C6.74905%2016.4014%206.76847%2016.3037%206.80621%2016.2126C6.84395%2016.1215%206.89927%2016.0387%206.969%2015.969L10.9395%2012L6.969%208.031C6.89915%207.96133%206.84374%207.87857%206.80593%207.78745C6.76812%207.69633%206.74866%207.59865%206.74866%207.5C6.74866%207.40135%206.76812%207.30366%206.80593%207.21255C6.84374%207.12143%206.89915%207.03867%206.969%206.969Z'%20fill='%23FAFAFB'/%3e%3c/g%3e%3cdefs%3e%3cclipPath%20id='clip0_102001_44'%3e%3crect%20width='24'%20height='24'%20fill='white'/%3e%3c/clipPath%3e%3c/defs%3e%3c/svg%3e\"","import iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\nimport octagonIcon from '../img/bi_x-octagon.svg';\nimport SimpleLightbox from 'simplelightbox';\nimport 'simplelightbox/dist/simple-lightbox.min.css';\n\nconst ulElem = document.querySelector('ul.gallery');\nlet gallery = new SimpleLightbox('.gallery a', {\n  captionsData: 'alt',\n  captionDelay: 250,\n});\nexport const showError = text => {\n  iziToast.show({\n    message: text,\n    position: 'center',\n    iconUrl: octagonIcon,\n    iconColor: '#FFFFFF',\n    backgroundColor: '#EF4040',\n    messageColor: '#FFFFFF',\n    progressBarColor: '#B51B1B',\n  });\n};\nexport const showGallery = images => {\n  function imageTemplate({\n    webformatURL,\n    largeImageURL,\n    tags,\n    likes,\n    views,\n    comments,\n    downloads,\n  }) {\n    return `\n<li class=\"gallery-item\">\n  <a class=\"gallery-link\" href=\"${largeImageURL}\">\n    <img\n      class=\"gallery-image\"\n      src=\"${webformatURL}\"\n      alt=\"${tags}\"\n    />\n  </a>\n  <div class = \"image-info-block\">\n    <div class = \"image-info-block-part\">\n      <p class=\"bold\">Likes</p>\n      <p></p>${likes}</p>\n  </div>\n    <div class = \"image-info-block-part\">\n    <p class=\"bold\">Views</p>\n    <p>${views}</p>\n  </div>\n  <div class = \"image-info-block-part\">\n    <p class=\"bold\">Comments</p>\n    <p>${comments}</p>\n  </div>\n  <div class = \"image-info-block-part\">\n    <p class=\"bold\">Downloads</p>\n    <p>${downloads}</p>\n  </div>\n</div>\n</li>\n`;\n  }\n  ulElem.innerHTML = images.map(imageTemplate).join('');\n  gallery.refresh();\n};\n\nexport const clearGallery = () => {\n  ulElem.innerHTML = '';\n};\n","import * as api from './js/pixabay-api';\nimport * as ai from './js/gemini-api';\nimport * as render from './js/render-functions';\n\nconst searchForm = document.querySelector('.search-form');\nconst loader = document.querySelector('.loader-placeholder');\n\nsearchForm.addEventListener('submit', event => {\n  event.preventDefault();\n  const form = event.target;\n  const searchInputValue = form.elements.input.value.trim();\n  if (searchInputValue === '') {\n    render.showError('Please fill out this field');\n    return;\n  }\n  render.clearGallery();\n  loader.classList.add('loader');\n\n  let prompt = ai.pixabayPrompt(searchInputValue);\n\n  ai.askAI(prompt)\n    .then(response => {\n      let params = response.data.candidates[0].content.parts[0].text;\n      console.log(params);\n      api\n        .searchImage(params)\n        .then(response => {\n          console.log(response);\n          if (response.data.hits.length === 0) {\n            render.showError(\n              'Sorry, there are no images matching your search query. Please, try again!'\n            );\n            return;\n          }\n          render.showGallery(response.data.hits);\n        })\n        .catch(error => {\n          console.log(error);\n        });\n    })\n    .catch(error => {\n      console.log(error);\n    })\n    .finally(() => {\n      loader.classList.remove('loader');\n    });\n});\n"],"names":["API_KEY","api_URL","searchImage","params","axios","pixabayPrompt","search","askAI","prompt","data","octagonIcon","ulElem","gallery","SimpleLightbox","showError","text","iziToast","showGallery","images","imageTemplate","webformatURL","largeImageURL","tags","likes","views","comments","downloads","clearGallery","searchForm","loader","event","searchInputValue","render.showError","render.clearGallery","ai.pixabayPrompt","ai.askAI","response","api\n        .searchImage","render.showGallery","error"],"mappings":"owBAEA,MAAMA,EAAU,qCACVC,EAAU,2BAEHC,EAAcC,GAClBC,EAAM,IAAI,GAAGH,CAAO,QAAQD,CAAO,IAAIG,CAAM,EAAE,ECJlDH,EAAU,0CACVC,EACJ,2FAEWI,EAAgBC,GACpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAyCCA,CAAM;AAAA,MAGHC,EAAQC,GAAU,CAC7B,IAAIC,EAAO,CACT,SAAU,CACR,CACE,MAAO,CACL,CACE,KAAMD,CACP,CACF,CACF,CACF,CACL,EACE,OAAOJ,EAAM,KAAK,GAAGH,CAAO,QAAQD,CAAO,GAAIS,CAAI,CACrD,EChEeC,EAAA,y3FCMTC,EAAS,SAAS,cAAc,YAAY,EAClD,IAAIC,EAAU,IAAIC,EAAe,aAAc,CAC7C,aAAc,MACd,aAAc,GAChB,CAAC,EACM,MAAMC,EAAYC,GAAQ,CAC/BC,EAAS,KAAK,CACZ,QAASD,EACT,SAAU,SACV,QAASL,EACT,UAAW,UACX,gBAAiB,UACjB,aAAc,UACd,iBAAkB,SACtB,CAAG,CACH,EACaO,EAAcC,GAAU,CACnC,SAASC,EAAc,CACrB,aAAAC,EACA,cAAAC,EACA,KAAAC,EACA,MAAAC,EACA,MAAAC,EACA,SAAAC,EACA,UAAAC,CACJ,EAAK,CACD,MAAO;AAAA;AAAA,kCAEuBL,CAAa;AAAA;AAAA;AAAA,aAGlCD,CAAY;AAAA,aACZE,CAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAMFC,CAAK;AAAA;AAAA;AAAA;AAAA,SAIXC,CAAK;AAAA;AAAA;AAAA;AAAA,SAILC,CAAQ;AAAA;AAAA;AAAA;AAAA,SAIRC,CAAS;AAAA;AAAA;AAAA;AAAA,CAKf,CACDf,EAAO,UAAYO,EAAO,IAAIC,CAAa,EAAE,KAAK,EAAE,EACpDP,EAAQ,QAAO,CACjB,EAEae,EAAe,IAAM,CAChChB,EAAO,UAAY,EACrB,EChEMiB,EAAa,SAAS,cAAc,cAAc,EAClDC,EAAS,SAAS,cAAc,qBAAqB,EAE3DD,EAAW,iBAAiB,SAAUE,GAAS,CAC7CA,EAAM,eAAc,EAEpB,MAAMC,EADOD,EAAM,OACW,SAAS,MAAM,MAAM,OACnD,GAAIC,IAAqB,GAAI,CAC3BC,EAAiB,4BAA4B,EAC7C,MACD,CACDC,IACAJ,EAAO,UAAU,IAAI,QAAQ,EAE7B,IAAIrB,EAAS0B,EAAiBH,CAAgB,EAE9CI,EAAS3B,CAAM,EACZ,KAAK4B,GAAY,CAChB,IAAIjC,EAASiC,EAAS,KAAK,WAAW,CAAC,EAAE,QAAQ,MAAM,CAAC,EAAE,KAC1D,QAAQ,IAAIjC,CAAM,EAClBkC,EACelC,CAAM,EAClB,KAAKiC,GAAY,CAEhB,GADA,QAAQ,IAAIA,CAAQ,EAChBA,EAAS,KAAK,KAAK,SAAW,EAAG,CACnCJ,EACE,2EACd,EACY,MACD,CACDM,EAAmBF,EAAS,KAAK,IAAI,CAC/C,CAAS,EACA,MAAMG,GAAS,CACd,QAAQ,IAAIA,CAAK,CAC3B,CAAS,CACT,CAAK,EACA,MAAMA,GAAS,CACd,QAAQ,IAAIA,CAAK,CACvB,CAAK,EACA,QAAQ,IAAM,CACbV,EAAO,UAAU,OAAO,QAAQ,CACtC,CAAK,CACL,CAAC"}